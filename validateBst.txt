
For all node, there is a Max and Min

for the first Node
    Max: Infinity
    Min: -Infinity

For Left Node
  Min: -Infinity
  Max: Node.value

For Right Node
  Min: Node.value
  Max: Infinity
  
  Time --> O(n)
  Space -> O(log(n))
  
if(node.value > Max || node.value < Min) return false

class BST {
  constructor(value){
    this.value = value
    this.left = null
    this.right = null
  }
}

function validateBST(node){
  return validateBSTHelper(node,-Infinity, Infinity)
}

function validateBSTHelper(node, min,max){
  if(!node) return true
  if(node.value >= max || node.value < min){
    return false
  }
  let leftResult = validateBSTHelper(node.left, min, node.value)
  let rightResult = validateBSTHelper(node.right,node.value,max)
  
  return leftResult && rightResult
}
